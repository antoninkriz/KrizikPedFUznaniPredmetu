version: "3"

services:
  start-dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - mysql
      - rabbitmq
      - nginx-proxy
    command: rabbitmq:5672

  api:
    build:
      context: .
      dockerfile: files/Dockerfile_Api
    container_name: api
    hostname: api
    links:
      - rabbitmq
      - mysql
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - '5000:5000'
    environment:
      - VIRTUAL_HOST=api.local

  service-auth:
    build:
      context: .
      dockerfile: files/Dockerfile_Services-Auth
    container_name: service-auth
    hostname: service-auth
    links:
      - rabbitmq
      - mysql
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - '5050:5050'

  service-data:
    build:
      context: .
      dockerfile: files/Dockerfile_Services-Data
    container_name: service-data
    hostname: service-data
    links:
      - rabbitmq
      - mysql
    depends_on:
      - rabbitmq
      - mysql
    ports:
      - '5051:5051'
  
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "8080:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
  
  rabbitmq:
    build:
      context: .
      dockerfile: files/Dockerfile_RabbitMq
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - '5672'
    healthcheck:
      test: "curl -f http://localhost:15672"
      interval: 10s
      timeout: 30s
      retries: 10

  mysql:
    image: mysql
    container_name: mysql
    hostname: mysql
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/dbinit/Schema.sql:/docker-entrypoint-initdb.d/0_Schema.sql
      - ./data/dbinit/Procedures.sql:/docker-entrypoint-initdb.d/1_Procedures.sql
      - ./data/dbinit/Data.sql:/docker-entrypoint-initdb.d/2_Data.sql
    ports:
      - '30006:3306'
    expose:
      - '30006'
    environment:
      MYSQL_ROOT_PASSWORD: Asdf.1234
      MYSQL_DATABASE: KarolinkaDb
      MYSQL_USER: KarolinkaDb
      MYSQL_PASSWORD: Asdf.1234
